# https://github.com/rust-lang/docker-rust/blob/master/1.46.0/buster/slim/Dockerfile
FROM debian:buster-slim

ENV RUSTUP_HOME=/usr/local/rustup \
	CARGO_HOME=/usr/local/cargo \
	PATH=/usr/local/cargo/bin:$PATH \
	RUST_VERSION=1.46.0

RUN set -eux; \
	# ssvm need gcc 9, so...
	echo 'deb http://deb.debian.org/debian testing main' >> /etc/apt/sources.list; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
	ca-certificates \
	gcc \
	libc6-dev \
	wget \
	; \
	dpkgArch="$(dpkg --print-architecture)"; \
	case "${dpkgArch##*-}" in \
	amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='49c96f3f74be82f4752b8bffcf81961dea5e6e94ce1ccba94435f12e871c3bdb' ;; \
	armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='5a2be2919319e8778698fa9998002d1ec720efe7cb4f6ee4affb006b5e73f1be' ;; \
	arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='d93ef6f91dab8299f46eef26a56c2d97c66271cea60bf004f2f088a86a697078' ;; \
	i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='e3d0ae3cfce5c6941f74fed61ca83e53d4cd2deb431b906cbd0687f246efede4' ;; \
	*) echo >&2 "unsupported architecture: ${dpkgArch}"; exit 1 ;; \
	esac; \
	url="https://static.rust-lang.org/rustup/archive/1.22.1/${rustArch}/rustup-init"; \
	wget "$url"; \
	echo "${rustupSha256} *rustup-init" | sha256sum -c -; \
	chmod +x rustup-init; \
	./rustup-init -y --no-modify-path --profile minimal --default-toolchain $RUST_VERSION --default-host ${rustArch}; \
	rm rustup-init; \
	chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \
	rustup --version; \
	cargo --version; \
	rustc --version; \
	apt-get remove -y --auto-remove \
	wget \
	; \
	rm -rf /var/lib/apt/lists/*;

# ssvm parts
ARG DEBIAN_FRONTEND=noninteractive

RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends curl; \
	curl -sL https://deb.nodesource.com/setup_14.x | bash -; \
	apt-get install -y nodejs; \
	rm -rf /var/lib/apt/lists/*;

RUN set -e; \
	npm install -y -g ssvmup --unsafe-perm; \
	npm install -y ssvm; \
	npm install express express-fileupload

RUN set -eux; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
	# for ssvmup build
	git \
	# for many libs
	build-essential \
	; \
	# for lzma-sys
	# clang pkg-config gcc-multilib
	rm -rf /var/lib/apt/lists/*;

WORKDIR /app
VOLUME /app
